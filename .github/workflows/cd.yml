# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CD

env:
  targetAccount: ghcr.io/gpsuscodewith
  versionPrefix: v0.1.
  imageName: modm
  RESOURCE_GROUP_NAME: development-${{ github.run_number }}
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build API Server & Operator
      run: make apiserver && make operator
  
    # - name: Run tests
    # run: make test-all

  push:     
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
  
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
  
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Ghcr
      run: echo ${{ secrets.CR_PAT }} | docker login -u ${{ env.targetAccount }} --password-stdin
        
    - name: Build and push to registry
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        file: ./build/package/Dockerfile
        tags: ${{ env.targetAccount }}/${{ env.imageName }}

  azure-deploy:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: Clean up resource groups
        uses: azure/CLI@v1 
        with: 
          azcliversion: 2.30.0 
          inlineScript: | 
            filter="[?starts_with(name,'development')].[name]" 
            groups=$(az group list --query $filter -o tsv) 
            for g in $groups; do 
              az group delete -n $g --yes --no-wait; 
            done 
            az group create -l eastus -n $RESOURCE_GROUP_NAME

      # TODO: this requires that we setup main.bicep first...separate PR coming
      # - name: Deploy resources
      #   uses: azure/CLI@v1 
      #   with: 
      #     azcliversion: 2.30.0 
      #     inlineScript: | 
      #       az deployment group create -g $RESOURCE_GROUP_NAME \
      #         --template-file ./templates/main.bicep \
      #         --parameters @./templates/main.parameters.json
