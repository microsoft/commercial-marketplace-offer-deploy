{
  "version": 3,
  "sources": ["../../@fluentui/react/lib/components/FocusTrapZone/components/FocusTrapZone/FocusTrapZone.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport {\n  elementContains,\n  getNativeProps,\n  divProperties,\n  getFirstTabbable,\n  getLastTabbable,\n  getNextElement,\n  focusAsync,\n  getPropsWithDefaults,\n  modalize,\n  on,\n} from '../../Utilities';\nimport { useId, useConst, useMergedRefs, useEventCallback, usePrevious, useUnmount } from '@fluentui/react-hooks';\nimport { useDocument } from '../../WindowProvider';\nimport type { IRefObject } from '../../Utilities';\nimport type { IFocusTrapZoneProps, IFocusTrapZone } from './FocusTrapZone.types';\n\ninterface IFocusTrapZoneInternalState {\n  previouslyFocusedElementInTrapZone?: HTMLElement;\n  hasFocus: boolean;\n  /** ID tracked in focusStack. Don't respect prop updates in case the ID changes while the FTZ is active. */\n  focusStackId: string;\n}\n\nconst COMPONENT_NAME = 'FocusTrapZone';\n\nconst DEFAULT_PROPS = {\n  disabled: false,\n  disableFirstFocus: false,\n  forceFocusInsideTrap: true,\n  isClickableOutsideFocusTrap: false,\n};\n\nconst useComponentRef = (\n  componentRef: IRefObject<IFocusTrapZone> | undefined,\n  previouslyFocusedElement: HTMLElement | undefined,\n  focusFTZ: () => void,\n) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      get previouslyFocusedElement() {\n        return previouslyFocusedElement;\n      },\n      focus: focusFTZ,\n    }),\n    [focusFTZ, previouslyFocusedElement],\n  );\n};\n\nexport const FocusTrapZone: React.FunctionComponent<IFocusTrapZoneProps> & {\n  /**\n   * Stack of active FocusTrapZone identifiers, exposed for testing purposes only.\n   * (This is always set, just marked as optional to avoid a cast in the component definition.)\n   * @internal\n   */\n  focusStack?: string[];\n} = React.forwardRef<HTMLDivElement, IFocusTrapZoneProps>((propsWithoutDefaults, ref) => {\n  const root = React.useRef<HTMLDivElement>(null);\n  const firstBumper = React.useRef<HTMLDivElement>(null);\n  const lastBumper = React.useRef<HTMLDivElement>(null);\n  const mergedRootRef = useMergedRefs(root, ref) as React.Ref<HTMLDivElement>;\n  const doc = useDocument();\n\n  const isFirstRender = usePrevious(false) ?? true;\n\n  const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n  const internalState = useConst<IFocusTrapZoneInternalState>({\n    hasFocus: false,\n    focusStackId: useId('ftz-', props.id),\n  });\n\n  const {\n    children,\n    componentRef,\n    disabled,\n    disableFirstFocus,\n    forceFocusInsideTrap,\n    focusPreviouslyFocusedInnerElement,\n    // eslint-disable-next-line deprecation/deprecation\n    firstFocusableSelector,\n    firstFocusableTarget,\n    // eslint-disable-next-line deprecation/deprecation\n    disableRestoreFocus = props.ignoreExternalFocusing,\n    isClickableOutsideFocusTrap,\n    enableAriaHiddenSiblings,\n  } = props;\n\n  const bumperProps = {\n    'aria-hidden': true,\n    style: {\n      pointerEvents: 'none',\n      position: 'fixed', // 'fixed' prevents browsers from scrolling to bumpers when viewport does not contain them\n    },\n    tabIndex: disabled ? -1 : 0, // make bumpers tabbable only when enabled\n    'data-is-visible': true,\n    'data-is-focus-trap-zone-bumper': true,\n  } as React.HTMLAttributes<HTMLDivElement>;\n\n  const focusElementAsync = React.useCallback((element: HTMLElement) => {\n    if (element !== firstBumper.current && element !== lastBumper.current) {\n      focusAsync(element);\n    }\n  }, []);\n\n  /**\n   * Callback to force focus into FTZ (named to avoid overlap with global focus() callback).\n   * useEventCallback always returns the same callback reference but updates the implementation\n   * every render to avoid stale captured values.\n   */\n  const focusFTZ = useEventCallback(() => {\n    if (!root.current) {\n      return; // not done mounting\n    }\n\n    const { previouslyFocusedElementInTrapZone } = internalState;\n    if (\n      focusPreviouslyFocusedInnerElement &&\n      previouslyFocusedElementInTrapZone &&\n      elementContains(root.current, previouslyFocusedElementInTrapZone)\n    ) {\n      // focus on the last item that had focus in the zone before we left the zone\n      focusElementAsync(previouslyFocusedElementInTrapZone);\n      return;\n    }\n\n    let firstFocusableChild: HTMLElement | null = null;\n\n    if (typeof firstFocusableTarget === 'string') {\n      firstFocusableChild = root.current.querySelector(firstFocusableTarget);\n    } else if (firstFocusableTarget) {\n      firstFocusableChild = firstFocusableTarget(root.current);\n    } else if (firstFocusableSelector) {\n      const focusSelector =\n        typeof firstFocusableSelector === 'string' ? firstFocusableSelector : firstFocusableSelector();\n      firstFocusableChild = root.current.querySelector('.' + focusSelector);\n    }\n\n    // Fall back to first element if query selector did not match any elements.\n    if (!firstFocusableChild) {\n      firstFocusableChild = getNextElement(\n        root.current,\n        root.current.firstChild as HTMLElement,\n        false,\n        false,\n        false,\n        true,\n      );\n    }\n\n    if (firstFocusableChild) {\n      focusElementAsync(firstFocusableChild);\n    }\n  });\n\n  /** Used in root div focus/blur handlers */\n  const focusBumper = (isFirstBumper: boolean) => {\n    if (disabled || !root.current) {\n      return;\n    }\n\n    const nextFocusable =\n      isFirstBumper === internalState.hasFocus\n        ? getLastTabbable(root.current, lastBumper.current!, true, false)\n        : getFirstTabbable(root.current, firstBumper.current!, true, false);\n\n    if (nextFocusable) {\n      if (nextFocusable === firstBumper.current || nextFocusable === lastBumper.current) {\n        // This can happen when FTZ contains no tabbable elements.\n        // focusFTZ() will take care of finding a focusable element in FTZ.\n        focusFTZ();\n      } else {\n        nextFocusable.focus();\n      }\n    }\n  };\n\n  /** Root div blur handler (doesn't need useCallback since it's for a native element) */\n  const onRootBlurCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    props.onBlurCapture?.(ev);\n    let relatedTarget = ev.relatedTarget;\n    if (ev.relatedTarget === null) {\n      // In IE11, due to lack of support, event.relatedTarget is always\n      // null making every onBlur call to be \"outside\" of the root\n      // even when it's not. Using document.activeElement is another way\n      // for us to be able to get what the relatedTarget without relying\n      // on the event\n      relatedTarget = doc!.activeElement as Element;\n    }\n    if (!elementContains(root.current, relatedTarget as HTMLElement)) {\n      internalState.hasFocus = false;\n    }\n  };\n\n  /** Root div focus handler (doesn't need useCallback since it's for a native element) */\n  const onRootFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    props.onFocusCapture?.(ev);\n\n    if (ev.target === firstBumper.current) {\n      focusBumper(true);\n    } else if (ev.target === lastBumper.current) {\n      focusBumper(false);\n    }\n\n    internalState.hasFocus = true;\n\n    if (ev.target !== ev.currentTarget && !(ev.target === firstBumper.current || ev.target === lastBumper.current)) {\n      // every time focus changes within the trap zone, remember the focused element so that\n      // it can be restored if focus leaves the pane and returns via keystroke (i.e. via a call to this.focus(true))\n      internalState.previouslyFocusedElementInTrapZone = ev.target as HTMLElement;\n    }\n  };\n\n  /** Called to restore focus on unmount or props change. (useEventCallback ensures latest prop values are used.) */\n  const returnFocusToInitiator = useEventCallback((elementToFocusOnDismiss: HTMLElement | null) => {\n    FocusTrapZone.focusStack = FocusTrapZone.focusStack!.filter(value => internalState.focusStackId !== value);\n\n    if (!doc) {\n      return;\n    }\n\n    const activeElement = doc.activeElement as HTMLElement;\n    if (\n      !disableRestoreFocus &&\n      typeof elementToFocusOnDismiss?.focus === 'function' &&\n      // only restore focus if the current focused element is within the FTZ, or if nothing is focused\n      (elementContains(root.current, activeElement) || activeElement === doc.body)\n    ) {\n      focusElementAsync(elementToFocusOnDismiss);\n    }\n  });\n\n  /** Called in window event handlers. (useEventCallback ensures latest prop values are used.) */\n  const forceFocusOrClickInTrap = useEventCallback((ev: FocusEvent | MouseEvent): void => {\n    // be sure to use the latest values here\n    if (disabled) {\n      return;\n    }\n    if (internalState.focusStackId === FocusTrapZone.focusStack!.slice(-1)[0]) {\n      const targetElement = ev.target as HTMLElement | null;\n      if (targetElement && !elementContains(root.current, targetElement)) {\n        if (doc && doc.activeElement === doc.body) {\n          setTimeout(() => {\n            if (doc && doc.activeElement === doc.body) {\n              focusFTZ();\n              internalState.hasFocus = true; // set focus here since we stop event propagation\n            }\n          }, 0);\n        } else {\n          focusFTZ();\n          internalState.hasFocus = true; // set focus here since we stop event propagation\n        }\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  });\n\n  // Update window event handlers when relevant props change\n  React.useEffect(() => {\n    const disposables: Array<() => void> = [];\n\n    if (forceFocusInsideTrap) {\n      disposables.push(on(window, 'focus', forceFocusOrClickInTrap, true));\n    }\n    if (!isClickableOutsideFocusTrap) {\n      disposables.push(on(window, 'click', forceFocusOrClickInTrap, true));\n    }\n\n    return () => {\n      disposables.forEach(dispose => dispose());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run when these two props change\n  }, [forceFocusInsideTrap, isClickableOutsideFocusTrap]);\n\n  // On prop change or first render, focus the FTZ and update focusStack if appropriate\n  React.useEffect(() => {\n    // Do nothing if disabled, or if it's a re-render and forceFocusInsideTrap is false\n    // (to match existing behavior, the FTZ handles first focus even if forceFocusInsideTrap\n    // is false, though it's debatable whether it should do this)\n    if (disabled || (!isFirstRender && !forceFocusInsideTrap) || !root.current) {\n      return;\n    }\n\n    // Transition from forceFocusInsideTrap / FTZ disabled to enabled (or initial mount)\n    FocusTrapZone.focusStack!.push(internalState.focusStackId);\n\n    const elementToFocusOnDismiss = props.elementToFocusOnDismiss || (doc!.activeElement as HTMLElement | null);\n\n    if (!disableFirstFocus && !elementContains(root.current, elementToFocusOnDismiss)) {\n      focusFTZ();\n    }\n\n    // To match existing behavior, always return focus on cleanup (even if we didn't handle\n    // initial focus), but it's debatable whether that's correct\n    return () => returnFocusToInitiator(elementToFocusOnDismiss);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run when these two props change\n  }, [forceFocusInsideTrap, disabled]);\n\n  // Handle modalization separately from first focus\n  React.useEffect(() => {\n    if (!disabled && enableAriaHiddenSiblings) {\n      const unmodalize = modalize(root.current!);\n      return unmodalize;\n    }\n  }, [disabled, enableAriaHiddenSiblings, root]);\n\n  // Cleanup lifecyle method for internalState.\n  useUnmount(() => {\n    // Dispose of element references so the DOM Nodes can be garbage-collected\n    delete internalState.previouslyFocusedElementInTrapZone;\n  });\n\n  useComponentRef(componentRef, internalState.previouslyFocusedElementInTrapZone, focusFTZ);\n\n  return (\n    <div\n      // this is above the native props spread so props['aria-labelledby'] will override it if provided\n      aria-labelledby={props.ariaLabelledBy}\n      // native props include onFocus, onBlur, className\n      {...getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties)}\n      ref={mergedRootRef}\n      onFocusCapture={onRootFocusCapture}\n      onBlurCapture={onRootBlurCapture}\n    >\n      <div {...bumperProps} ref={firstBumper} />\n      {children}\n      <div {...bumperProps} ref={lastBumper} />\n    </div>\n  );\n});\n\nFocusTrapZone.displayName = COMPONENT_NAME;\nFocusTrapZone.focusStack = [];\n"],
  "mappings": "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",
  "names": ["_a"]
}
