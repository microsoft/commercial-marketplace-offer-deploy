{"version":3,"file":"index.js","sourceRoot":"../src/","sources":["timeFormatting/index.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACI,IAAM,gBAAgB,GAAG,UAAC,IAAU,EAAE,WAAqB,EAAE,SAAmB;IACrF,IAAI,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE;QACjD,IAAI,EAAE,SAAS;QACf,MAAM,EAAE,SAAS;QACjB,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;QAC3C,MAAM,EAAE,SAAS;KAClB,CAAC,CAAC;IAEH,IAAI,CAAC,SAAS,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;QACvD,gBAAgB,GAAG,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACrD;IAED,OAAO,gBAAgB,CAAC;AAC1B,CAAC,CAAC;AAbW,QAAA,gBAAgB,oBAa3B","sourcesContent":["/**\n * Format a date object to a localized time string using the browser's default locale\n * @param date - Input date to format\n * @param showSeconds - Whether to show seconds in the formatted string\n * @param useHour12 - Whether to use 12-hour time\n */\nexport const formatTimeString = (date: Date, showSeconds?: boolean, useHour12?: boolean): string => {\n  let localeTimeString = date.toLocaleTimeString([], {\n    hour: 'numeric',\n    minute: '2-digit',\n    second: showSeconds ? '2-digit' : undefined,\n    hour12: useHour12,\n  });\n\n  if (!useHour12 && localeTimeString.slice(0, 2) === '24') {\n    localeTimeString = '00' + localeTimeString.slice(2);\n  }\n\n  return localeTimeString;\n};\n"]}