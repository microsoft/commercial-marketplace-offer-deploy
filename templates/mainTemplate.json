{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "applicationInstallerUserName": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            }
        },
        "applicationInstallerPassword": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            }
        },
        "applicationInstallerUrl": {
            "type": "string",
            "defaultValue": "[concat('https://', 'modm', substring(uniqueString(parameters('_artifactsLocation')), 0, 12), '.azurewebsites.net')]",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            }
        },
        "autoDelete": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Indicates whether the resources should be automatically deleted."
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "roleDefinitionId": {
            "owner": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
            "contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
            "appConfigReader": "516239f1-63e1-4d78-a4de-a74fb236a071"
        },
        "configStoreName": "[concat('modmconfig-', substring(uniqueString(resourceGroup().id), 0, 8))]",
        "clientAppName": "[concat('modm', substring(uniqueString(parameters('_artifactsLocation')), 0, 12))]",
        "clientAppUrl": "[parameters('applicationInstallerUrl')]",
        "clientAppCredentials": "[base64(concat(trim(parameters('applicationInstallerUserName')), '|', trim(parameters('applicationInstallerPassword'))))]",
        "clientAppSigningKey": "[uniqueString(resourceGroup().id, variables('clientAppName'))]",
        "clientAppStorageAccountName": "[format('modm{0}', uniqueString(resourceGroup().id))]",
        "clientAppPackageUrl": "[concat(variables('artifactsContainerLocation'), '/', 'clientapp.zip')]",
        "vmiReferenceId": "{{vmiReferenceId}}",
        "virtualMachineSize": "Standard_D2s_v3",
        "virtualMachineName": "modm",
        "virtualMachineUsername": "modmadmin",
        "virtualMachinePassword": "[concat('Modm-', substring( uniqueString(resourceGroup().id), 0, 8))]",
        "vnetName": "[concat(variables('virtualMachineName'), '-vnet')]",
        "subnetName": "default",
        "artifactsContainerLocation": "[substring(parameters('_artifactsLocation'), 0, lastIndexOf(parameters('_artifactsLocation'), '/'))]",
        "vmResourceId": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]",
        "dnsLabel": "[concat('modm', uniqueString(variables('vmResourceId')))]",
        "publicFqdn": "[concat(variables('dnsLabel'), '.', variables('location'), '.cloudapp.azure.com')]",
        "backendUrl": "[concat('https://', variables('publicFqdn'), '/')]",
        "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "networkInterfaceName": "[concat(variables('virtualMachineName'), substring(uniqueString(resourceGroup().name), 0, 4))]",
        "publicIpAddressType": "Static",
        "publicIpAddressSku": "Standard",
        "publicIpAddressName": "[concat(variables('virtualMachineName'), '-publicip')]",
        "nsgName": "[concat(variables('virtualMachineName'), '-nsg')]",
        "autoDeleteExireInMinutes": "1440",
        "userData": {
            "installerPackage": {
                "uri": "[concat(variables('artifactsContainerLocation'), '/', 'installer.zip')]",
                "hash": "{{installerPackageHash}}"
            },
            "parameters": {
                "resourceGroupName": "[resourceGroup().name]"
            }
        },
        "commonTags": {
            "modm": "standard"
        },
        "postTags": {
            "modm": "post"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[variables('clientAppStorageAccountName')]",
            "comments": "Storage account for the azure function which will serve up the dashboard",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "defaultToOAuthAuthentication": true
            },
            "tags": "[variables('commonTags')]"
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[variables('clientAppName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "B2"
            },
            "properties": {
                "reserved": true
            },
            "tags": "[variables('postTags')]"
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[variables('clientAppName')]",
            "location": "[variables('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('clientAppName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('clientAppStorageAccountName'))]"
            ],
            "tags": "[variables('postTags')]",
            "kind": "linux",
            "properties": {
                "reserved": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('clientAppName'))]",
                "publicNetworkAccess": "Enabled",
                "httpsOnly": true
            },
            "resources": [
                {
                    "type": "config",
                    "name": "appsettings",
                    "apiVersion": "2021-03-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('clientAppName'))]",
                        "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
                    ],
                    "properties": {
                        "ASPNETCORE_HTTPS_PORT": "443",
                        "WEBSITE_RUN_FROM_PACKAGE": "[variables('clientAppPackageUrl')]"
                    }
                },
                {
                    "type": "config",
                    "name": "web",
                    "apiVersion": "2021-03-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('clientAppName'))]"
                    ],
                    "properties": {
                        "linuxFxVersion": "DOTNETCORE|7.0",
                        "netFrameworkVersion": "7.0",
                        "appCommandLine": "dotnet \"ClientApp.dll\""
                    }
                },
                {
                    "type": "config",
                    "name": "metadata",
                    "apiVersion": "2021-03-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('clientAppName'))]"
                    ],
                    "properties": {
                       "CURRENT_STACK": "dotnet"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.AppConfiguration/configurationStores",
            "apiVersion": "2021-10-01-preview",
            "name": "[variables('configStoreName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "standard"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('clientAppName'))]"
            ],
            "properties": {},
            "resources": [
                {
                    "type": "keyValues",
                    "name": "Credentials",
                    "apiVersion": "2021-10-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
                    ],
                    "properties": {
                        "value": "[variables('clientAppCredentials')]",
                        "contentType": "text/plain"
                    }
                },
                {
                    "type": "keyValues",
                    "name": "SigningKey",
                    "apiVersion": "2021-10-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
                    ],
                    "properties": {
                        "value": "[variables('clientAppSigningKey')]",
                        "contentType": "text/plain"
                    }
                },
                {
                    "type": "keyValues",
                    "name": "DashboardUrl",
                    "apiVersion": "2021-10-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
                    ],
                    "properties": {
                        "value": "[variables('clientAppUrl')]",
                        "contentType": "text/plain"
                    }
                },
                {
                    "type": "keyValues",
                    "name": "BackendUrl",
                    "apiVersion": "2021-10-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
                    ],
                    "properties": {
                        "value": "[variables('backendUrl')]",
                        "contentType": "text/plain"
                    }
                },
                {
                    "type": "keyValues",
                    "name": "InstalledTime",
                    "apiVersion": "2021-10-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
                    ],
                    "properties": {
                        "value": "[utcNow()]",
                        "contentType": "text/plain"
                    }
                },
                {
                    "type": "keyValues",
                    "name": "ExpireIn",
                    "apiVersion": "2021-10-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
                    ],
                    "properties": {
                        "value": "[if(parameters('autoDelete'), variables('autoDeleteExireInMinutes'), '-1')]",
                        "contentType": "text/plain"
                    }
                }
            ],
            "tags": "[variables('commonTags')]"
        },
        {
            "name": "[variables('vnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2021-08-01",
            "location": "[variables('location')]",
            "tags": "[variables('commonTags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                }
            }
        },
        {
            "name": "[concat(variables('vnetName'), '/', variables('subnetName'))]",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2021-08-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2021-08-01",
            "name": "[variables('nsgName')]",
            "location": "[variables('location')]",
            "tags": "[variables('commonTags')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowHTTP",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowHTTPS",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterfaceName')]",
            "apiVersion": "2021-08-01",
            "location": "[variables('location')]",
            "tags": "[variables('commonTags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]",
                                "properties": {
                                    "dnsSettings": {
                                        "domainNameLabel": "[variables('dnsLabel')]"
                                    },
                                    "deleteOption": "Delete"
                                }
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[variables('location')]",
            "tags": "[variables('commonTags')]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsLabel')]"
                }
            },
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(concat('ownerAssignment-', resourceGroup().id))]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]"
            ],
            "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[variables('Owner')]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName')), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-10-01-preview",
            "scope": "[format('Microsoft.AppConfiguration/configurationStores/{0}', variables('configStoreName'))]",
            "name": "[guid(resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName')), resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName')), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId').owner))]",
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId').owner)]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName')), '2022-03-01', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]",
                "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-10-01-preview",
            "scope": "[format('Microsoft.AppConfiguration/configurationStores/{0}', variables('configStoreName'))]",
            "name": "[guid(resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName')), resourceId('Microsoft.Web/sites', variables('clientAppName')), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId').contributor))]",
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId').contributor)]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('clientAppName')), '2022-03-01', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('clientAppName'))]",
                "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-10-01-preview",
            "scope": "[format('Microsoft.AppConfiguration/configurationStores/{0}', variables('configStoreName'))]",
            "name": "[guid(resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName')), resourceId('Microsoft.Web/sites', variables('clientAppName')), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId').appConfigReader))]",
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId').appConfigReader)]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('clientAppName')), '2022-03-01', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('clientAppName'))]",
                "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "name": "[variables('virtualMachineName')]",
            "location": "[variables('location')]",
            "tags": "[variables('commonTags')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
                "[resourceId('Microsoft.Web/sites', variables('clientAppName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('virtualMachineSize')]"
                },
                "userData": "[base64(string(variables('userData')))]",
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "deleteOption": "Delete"
                    },
                    "imageReference": {
                        "id": "[variables('vmiReferenceId')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]",
                            "properties": {
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('virtualMachineName')]",
                    "adminUsername": "[variables('virtualMachineUsername')]",
                    "adminPassword": "[variables('virtualMachinePassword')]",
                    "linuxConfiguration": {
                        "patchSettings": {
                            "patchMode": "ImageDefault"
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        }
    ],
    "outputs": {
        "virtualMachinePassword": {
            "type": "string",
            "value": "[variables('virtualMachinePassword')]"
        }
    }
}