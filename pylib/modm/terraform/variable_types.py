
# create a class enum for the terraform variable types
from enum import Enum

class TerraformInputVariableType(Enum):
  """
  An enumeration of Terraform variable types.

  Attributes:
    string (str): A string variable type.
    bool (str): A boolean variable type.
    number (str): A numeric variable type.
    list (str): A list variable type.
    set (str): A set variable type.
    object (str): An object variable type.
    map (str): A map variable type.
  """
  string = 'string'
  bool = 'bool'
  number = 'number'
  list = 'list'
  set = 'set'
  object = 'object'
  map = 'map'

  @staticmethod
  def to_list() -> [str]:
        """
        Returns a list of all the variable types as strings.

        This function returns a list of all the variable types that are available in the system as strings. The list is generated by mapping the `value` attribute of each `VariableType` object to a new list.

        Returns:
          list: A list of all the variable types as strings.
        """
        return list(map(lambda c: c.value, TerraformInputVariableType))
  
  @staticmethod
  def is_valid_type(type_string: str) -> bool:
    """
    Checks if a string is a valid variable type.

    This function checks if a string is a valid variable type. The string is compared against the list of valid variable types.

    Args:
      type_string (str): The string to check.

    Returns:
      bool: True if the string is a valid variable type, False otherwise.
    """
    return type_string in TerraformInputVariableType.to_list()
    