swagger: "2.0"
info:
  description: "This is a sample server Deploymentstore server.  You can find out more about    \ Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).    \  For this sample, you can use the api key `special-key` to test the authorization    \ filters."
  version: "1.0.0"
  title: "Commercial Marketplace Offer Deployment Management v1.0"
  contact:
    email: "modm@microsoft.com"
  license:
    name: "MIT"
    url: "https://opensource.org/license/mit/"
host: "partner.microsoft.com"
basePath: "/v1"
tags:
- name: "azure-marketplace"
  description: "Commercial Marketplace Offer Deployment Management"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "https"
paths:
  /deployments:
    get:
      tags:
      - "deployment"
      summary: "Get all Deployments"
      description: "List all deployments"
      operationId: "getDeployments"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "none"
          - "scheduled"
          - "running"
          - "success"
          default: "none"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Deployment"
      security:
      - default_auth:
        - "write:deployments"
        - "read:deployments"
    post:
      tags:
      - "deployment"
      summary: "Add a new deployment to the deployment"
      description: ""
      operationId: "addDeployment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Deployment object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Deployment"
      responses:
        "405":
          description: "Invalid input"
      security:
      - default_auth:
        - "write:deployments"
        - "read:deployments"
    put:
      tags:
      - "deployment"
      summary: "Update an existing deployment"
      description: ""
      operationId: "updateDeployment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Deployment object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Deployment"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Deployment not found"
        "405":
          description: "Validation exception"
      security:
      - default_auth:
        - "write:deployments"
        - "read:deployments"
  /deployments/{deploymentId}:
    get:
      tags:
      - "deployment"
      summary: "Get deployment by ID"
      description: "Returns a single deployment"
      operationId: "getDeploymentById"
      produces:
      - "application/json"
      parameters:
      - name: "deploymentId"
        in: "path"
        description: "ID of deployment to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Deployment"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Deployment not found"
      security:
      - api_key: []
  /deployments/{deploymentId}/operations:
    post:
      tags:
      - "deployment"
      - "operation"
      summary: "Triggers an operation for a deployment"
      description: "Triggers a command operation with parameters for a deployment"
      operationId: "triggerDeploymentOperation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Deployment operation trigger"
        required: true
        schema:
          $ref: "#/definitions/DeploymentOperation"
      responses:
        "200":
          description: "successful operation"
      security:
      - api_key: []
  /deployments/operations:
    get:
      tags:
      - "operation"
      summary: "Returns the list of available operations for a current deployment"
      description: "Returns a list of available operations that can be performed on a deployment"
      operationId: "getOperations"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AvailableDeploymentOperation"
      security:
      - api_key: []
  /events:
    get:
      tags:
      - "operation"
      summary: "Returns the list of available operations for a current deployment"
      description: "Returns a list of available operations that can be performed on a deployment"
      operationId: "getEvents"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AvailableDeploymentOperation"
      security:
      - api_key: []
  /events/subscriptions:
    post:
      tags:
      - "events"
      summary: "Register event subscription"
      description: "Registers a subscription for a particular topic"
      operationId: "addEventSubscription"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Deployment object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/EventSubscription"
      responses:
        "405":
          description: "Invalid input"
      security:
      - default_auth:
        - "write:deployments"
        - "read:deployments"
securityDefinitions:
  default_auth:
    type: "oauth2"
    authorizationUrl: "http://modm.microsoftonline.com/oauth/dialog"
    flow: "implicit"
    scopes:
      write:deployments: "modify deployments in your account"
      read:deployments: "read your deployments"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  AvailableDeploymentOperation:
    type: "object"
    properties:
      name:
        type: "string"
      parameters:
        type: array
        items:
          type: "string"
  DeploymentOperation:
    type: "object"
    properties:
      name:
        type: "string"
      parameters:
        type: array
        items: 
          $ref: "#/definitions/DeploymentOperationParameter"
  DeploymentOperationParameter:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "string"
  Event:
    type: "object"
    properties:
      name:
        type: "string"
  EventSubscription:
    type: "object"
    properties:
      topic:
        type: "string"
      name:
        type: "string"
      callback:
        type: "string"
  DeploymentRequest:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
      multiStage:
        type: "boolean"
        default: false
      template:
        $ref: "#/definitions/DeploymentTemplate"
  Deployment:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      template:
        $ref: "#/definitions/DeploymentTemplate"
      stages:
        type: "array"
        items:
          $ref: "#/definitions/DeploymentStage"
  DeploymentTemplateParameter:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "object"
        additionalProperties: {}
  DeploymentTemplate:
    type: "object"
    properties:
      name:
        type: "string"
      uri:
        type: "string"
      parameters:
        type: "array"
        items:
          $ref: "#/definitions/DeploymentTemplateParameter"
  DeploymentStage:
    type: "object"
    properties:
      name:
        type: "string"
      attributes:
        type: "object"
        additionalProperties: {}