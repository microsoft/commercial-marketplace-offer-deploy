{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "secureString"
        },
        "imageReference": {
            "type": "string"
        },
        "zippedFunction": {
            "type": "string"
        },
        "functionAppName": {
            "type": "string"
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
              "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        }
    },
    "variables": {
        "virtualMachineSize": "Standard_D2s_v3",
        "virtualMachineName": "modm",
        "vnetName": "[concat(variables('virtualMachineName'), '-vnet')]",
        "subnetName": "default",
        "artifactsContainerLocation": "[substring(parameters('_artifactsLocation'), 0, lastIndexOf(parameters('_artifactsLocation'), '/'))]",
        "vmResourceId": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]",
        "dnsLabel": "[concat('modm', uniqueString(variables('vmResourceId')))]",
        "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "networkInterfaceName": "[concat(variables('virtualMachineName'), substring(uniqueString(resourceGroup().name), 0, 4))]",
        "publicIpAddressType": "Static",
        "publicIpAddressSku": "Standard",
        "publicIpAddressName": "[concat(variables('virtualMachineName'), '-publicip')]",
        "nsgName": "[concat(variables('virtualMachineName'), '-nsg')]",
        "userDataObject": {
            "artifactsUri": "[concat(variables('artifactsContainerLocation'), '/', 'content.zip')]",
            "artifactsHash": "<CONTENT_HASH>",
            "functionAppName": "[parameters('functionAppName')]",
            "parameters": {
                "resource_group_name": "[resourceGroup().name]",
                "location": "[resourceGroup().location]",
                "sql_admin_password": "[parameters('adminPassword')]"
            }
        },
        "commonTags": {
            "modm": "true"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "[concat('storage', uniqueString(resourceGroup().id))]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
            "apiVersion": "2021-04-01-preview",
            "name": "[concat('storage', uniqueString(resourceGroup().id), '/Microsoft.Authorization/', guid(resourceGroup().id, 'storagerole'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', concat('storage', uniqueString(resourceGroup().id)))]"
            ], 
            "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",  
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2020-12-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('functionAppName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', concat('storage', uniqueString(resourceGroup().id)))]"
            ],
            "kind": "functionapp,linux",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppName'))]",
                "linuxFxVersion": "DOTNET-ISOLATED|7.0",
                "siteConfig": {
                    "alwaysOn": true,
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet-isolated"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "[parameters('zippedFunction')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "DOTNET_FUNCTION_APP_LANG_VERSION",
                            "value": "7.0"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', concat('storage', uniqueString(resourceGroup().id)), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', concat('storage', uniqueString(resourceGroup().id))), '2021-04-01').keys[0].value)]"
                        }
                    ]
                },
                "httpsOnly": true
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-12-01",
            "name": "[parameters('functionAppName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "reserved": true
            },
            "sku": {
                "name": "B1",
                "tier": "Basic"
            }
        },
        {
            "name": "[variables('vnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2021-08-01",
            "location": "[resourceGroup().location]",
            "tags": "[variables('commonTags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16" 
                    ]
                }
            }
        },
        {
            "name": "[concat(variables('vnetName'), '/', variables('subnetName'))]",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2021-08-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24" 
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2021-08-01",
            "name": "[variables('nsgName')]",
            "location": "[parameters('location')]",
            "tags": "[variables('commonTags')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowHTTP",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowHTTPS",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterfaceName')]",
            "apiVersion": "2021-08-01",
            "location": "[parameters('location')]",
            "tags": "[variables('commonTags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]" 
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]",
                                "properties": {
                                    "dnsSettings": {
                                        "domainNameLabel": "[variables('dnsLabel')]"
                                    },
                                    "deleteOption": "Delete"
                                }
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]" 
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[parameters('location')]",
            "tags": "[variables('commonTags')]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsLabel')]"
                }
            },
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(concat('ownerAssignment-', resourceGroup().id))]",
            "dependsOn": [
              "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]"
            ],
            "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[variables('Owner')]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName')), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "name": "[variables('virtualMachineName')]",
            "location": "[parameters('location')]",
            "tags": "[variables('commonTags')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('virtualMachineSize')]"
                },
                "userData": "[base64(string(variables('userDataObject')))]",
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "deleteOption": "Delete"
                    },
                    "imageReference": {
                        "id": "[parameters('imageReference')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]",
                            "properties": {
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "patchSettings": {
                            "patchMode": "ImageDefault"
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "vmFQDN": {
            "type": "string",
            "value": "[variables('dnsLabel')]"
        }
    }
}