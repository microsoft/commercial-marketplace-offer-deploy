{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.17.1.54307",
        "templateHash": "18273472020005619209"
      }
    },
    "parameters": {
      "functionAppName": {
        "type": "string",
        "defaultValue": "[format('func-{0}', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "The name of the Azure Function app."
        }
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_RAGRS"
        ],
        "metadata": {
          "description": "Storage Account type"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "appInsightsLocation": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for Application Insights"
        }
      },
      "functionWorkerRuntime": {
        "type": "string",
        "defaultValue": "dotnet-isolated",
        "allowedValues": [
          "dotnet",
          "node",
          "python",
          "java",
          "dotnet-isolated"
        ],
        "metadata": {
          "description": "The language worker runtime to load in the function app."
        }
      },
      "functionPlanOS": {
        "type": "string",
        "defaultValue": "Windows",
        "allowedValues": [
          "Windows",
          "Linux"
        ],
        "metadata": {
          "description": "Specifies the OS used for the Azure Function hosting plan."
        }
      },
      "functionAppPlanSku": {
        "type": "string",
        "defaultValue": "S1",
        "allowedValues": [
          "S1",
          "S2",
          "S3"
        ],
        "metadata": {
          "description": "Specifies the Azure Function hosting plan SKU."
        }
      },
      "packageUri": {
        "type": "string",
        "metadata": {
          "description": "The zip content url."
        }
      },
      "linuxFxVersion": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Only required for Linux app to represent runtime stack in the format of 'runtime|runtimeVersion'. For example: 'python|3.9'"
        }
      },
      "netFrameworkVersion": {
        "type": "string",
        "defaultValue": "7.0"
      }
    },
    "variables": {
      "hostingPlanName": "[parameters('functionAppName')]",
      "applicationInsightsName": "[parameters('functionAppName')]",
      "storageAccountName": "[format('{0}azfunctions', uniqueString(resourceGroup().id))]",
      "isReserved": "[if(equals(parameters('functionPlanOS'), 'Linux'), true(), false())]"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-02-01",
        "name": "[variables('storageAccountName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[parameters('storageAccountType')]"
        },
        "kind": "Storage"
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2021-02-01",
        "name": "[variables('hostingPlanName')]",
        "location": "[parameters('location')]",
        "sku": {
          "tier": "Standard",
          "name": "[parameters('functionAppPlanSku')]",
          "family": "S",
          "capacity": 1
        },
        "properties": {
          "reserved": "[variables('isReserved')]"
        }
      },
      {
        "type": "Microsoft.Insights/components",
        "apiVersion": "2020-02-02",
        "name": "[variables('applicationInsightsName')]",
        "location": "[parameters('appInsightsLocation')]",
        "tags": {
          "[format('hidden-link:{0}', resourceId('Microsoft.Web/sites', variables('applicationInsightsName')))]": "Resource"
        },
        "properties": {
          "Application_Type": "web"
        },
        "kind": "web"
      },
      {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2021-02-01",
        "name": "[parameters('functionAppName')]",
        "location": "[parameters('location')]",
        "kind": "[if(variables('isReserved'), 'functionapp,linux', 'functionapp')]",
        "properties": {
          "reserved": "[variables('isReserved')]",
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "siteConfig": {
            "alwaysOn": true,
            "linuxFxVersion": "[if(variables('isReserved'), parameters('linuxFxVersion'), json('null'))]",
            "appSettings": [
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
              },
              {
                "name": "AzureWebJobsStorage",
                "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~4"
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "[parameters('functionWorkerRuntime')]"
              },
              {
                "name": "WEBSITE_RUN_FROM_PACKAGE",
                "value": "0"
              }
            ],
            "netFrameworkVersion": "[parameters('netFrameworkVersion')]",
            "cors": {
                "allowedOrigins": [
                    "*"
                ],
                "supportCredentials": false
            }
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
          "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
        ]
      }
    ]
}  