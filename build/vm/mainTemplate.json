{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "networkInterfaceName1": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
        "virtualNetworkId": {
            "type": "string"
        },
        "publicIpAddressName1": {
            "type": "string"
        },
        "publicIpAddressType": {
            "type": "string"
        },
        "publicIpAddressSku": {
            "type": "string"
        },
        "pipDeleteOption": {
            "type": "string"
        },
        "virtualMachineName": {
            "type": "string"
        },
        "virtualMachineComputerName1": {
            "type": "string"
        },
        "osDiskType": {
            "type": "string"
        },
        "osDiskDeleteOption": {
            "type": "string"
        },
        "dataDisks1": {
            "type": "array"
        },
        "dataDiskResources1": {
            "type": "array"
        },
        "virtualMachineSize": {
            "type": "string"
        },
        "nicDeleteOption": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "secureString"
        },
        "virtualMachine1Zone": {
            "type": "string"
        },
        "imageReference": {
            "type": "string"
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
              "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        }
    },
    "variables": {
        "vnetId": "[parameters('virtualNetworkId')]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "scriptDirectory": "/usr/local/source/build/vm",
        "scriptName": "scriptExtension.sh",
        "vmFqdn": "[concat(parameters('virtualMachineName'), '.', parameters('location'), '.cloudapp.azure.com')]"
    },
    "resources": [
        {
            "name": "[parameters('networkInterfaceName1')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-08-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName1'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName1'))]",
                                "properties": {
                                    "deleteOption": "[parameters('pipDeleteOption')]"
                                }
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('publicIpAddressName1')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('virtualMachineName')]"
                }
            },
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            },
            "zones": [
                "[parameters('virtualMachine1Zone')]"
            ]
        },
        {
            "name": "[parameters('dataDiskResources1')[copyIndex()].name]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2022-03-02",
            "location": "[parameters('location')]",
            "properties": "[parameters('dataDiskResources1')[copyIndex()].properties]",
            "sku": {
                "name": "[parameters('dataDiskResources1')[copyIndex()].sku]"
            },
            "copy": {
                "name": "managedDiskResources",
                "count": "[length(parameters('dataDiskResources1'))]"
            },
            "zones": "[if(contains(parameters('dataDiskResources1')[copyIndex()].sku, '_ZRS'), json('null'), array(parameters('virtualMachine1Zone')))]"
        },
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "managedDiskResources",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName1'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        },
                        "deleteOption": "[parameters('osDiskDeleteOption')]"
                    },
                    "imageReference": {
                        "id": "[parameters('imageReference')]"
                    },
                    "copy": [
                        {
                            "name": "dataDisks",
                            "count": "[length(parameters('dataDisks1'))]",
                            "input": {
                                "lun": "[parameters('dataDisks1')[copyIndex('dataDisks')].lun]",
                                "createOption": "[parameters('dataDisks1')[copyIndex('dataDisks')].createOption]",
                                "caching": "[parameters('dataDisks1')[copyIndex('dataDisks')].caching]",
                                "diskSizeGB": "[parameters('dataDisks1')[copyIndex('dataDisks')].diskSizeGB]",
                                "managedDisk": {
                                    "id": "[resourceId('Microsoft.Compute/disks', parameters('dataDiskResources1')[copyIndex('dataDisks')].name)]",
                                    "storageAccountType": "Standard_LRS"
                                },
                                "deleteOption": "[parameters('dataDisks1')[copyIndex('dataDisks')].deleteOption]",
                                "writeAcceleratorEnabled": "[parameters('dataDisks1')[copyIndex('dataDisks')].writeAcceleratorEnabled]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName1'))]",
                            "properties": {
                                "deleteOption": "[parameters('nicDeleteOption')]"
                            }
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineComputerName1')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "patchSettings": {
                            "patchMode": "ImageDefault"
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "customScript",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2019-03-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "script": "[base64(concat('#!/bin/bash\n', 'sudo sh ', variables('scriptDirectory'), '/', variables('scriptName'), ' ', parameters('_artifactsLocation'), ' ', variables('vmFqdn')))]"
                        }
                    }
                }
            ],
            "zones": [
                "[parameters('virtualMachine1Zone')]"
            ]
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}